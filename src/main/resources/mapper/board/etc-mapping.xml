<?xml version="1.0" encoding="UTF-8" ?>
<!-- mapper DTD 선언 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springbook.etc.mapper.EtcMapper">

	<!--문의추가 -->
	<insert id="insertAsk" parameterType="com.springbook.etc.vo.JoinAskVO">
		INSERT INTO JOIN_ASK
		(
		company_nm, 
		ceo_nm, 
		business_num, 
		company_phone_num, 
		addr1, 
		addr2, 
		manager_nm,
		file_id,
		business_type,		
		reg_date
		)
		VALUES
		(
		#{companyNm}, 
		#{ceoNm}, 
		#{businessNum}, 
		#{companyPhoneNum},
		#{addr1}, 
		#{addr2}, 
		#{managerNm},
		#{fileId},
		#{businessType},
		now()		
		)
	</insert>

	<!--문의전체개수 -->
	<select id="inquiryListCount" resultType="int" parameterType="java.lang.String">
		SELECT 
		COUNT(*)
		FROM
		JOIN_ASK
		WHERE 
		DEL_YN = "N"
		<if test= "keyword != null and !keyword.equals('')">
    	AND	COMPANY_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
	</select>
	
	<!--키워드&페이징 포함 문의 -->
	<select id="getInquiryList" resultType="com.springbook.etc.vo.JoinAskVO" parameterType="Map">
		SELECT
		*
		FROM
		JOIN_ASK LEFT OUTER JOIN FILE ON JOIN_ASK.FILE_ID = FILE.FILE_ID
		WHERE 
		JOIN_ASK.DEL_YN = 'N'
		<if test= "keyword != null and !keyword.equals('')">
    	AND	JOIN_ASK.COMPANY_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
   		ORDER BY JOIN_ASK.REG_DATE DESC
		LIMIT #{i}, #{contentnum}
	</select>
	
	<!--신규가입문의 상세보기 -->
	<select id="getInquiryDetail" resultType="com.springbook.etc.vo.JoinAskVO" parameterType="java.lang.String">
		SELECT
		*
		FROM
		JOIN_ASK
		WHERE 
		DEL_YN = 'N'
    	AND	IDX = #{idx}
	</select>
	
	<!--신규가입문의 정보저장 -->
	<update id="updateInquiry" parameterType="Map">
		UPDATE
		JOIN_ASK
		SET INFO = #{info}
    	WHERE IDX = #{idx}
	</update>
	
	<!--제품명등록관리 전체 개수 -->
	<select id="productListCount" resultType="int" parameterType="Map">
		SELECT 
		COUNT(*)
		FROM
	    PRODUCT
		WHERE 
		DEL_YN = 'N'
		<if test= "keyword != null and keyword.equals('') and type.equals('product_nm')">
    	AND	PRODUCT_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
		<if test= "keyword != null and !keyword.equals('') and type.equals('type')">
    	AND	TYPE LIKE CONCAT("%",#{keyword},"%")
   		</if>   
	</select>
	
	<!--페이지&키워드 포함 제품명 등록관리조회 -->
	<select id="getProductList" resultType="com.springbook.etc.vo.ProductVO" parameterType="Map">
		SELECT
		*
		FROM
		PRODUCT
		WHERE 
		DEL_YN = 'N'
		<if test= "keyword != null and !keyword.equals('') and type.equals('productNm')">
    	AND	PRODUCT_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
		<if test= "keyword != null and !keyword.equals('') and type.equals('type')">
    	AND	TYPE LIKE CONCAT("%",#{keyword},"%")
   		</if> 
		LIMIT #{i}, #{contentnum}
	</select>
		
	<!--제품타입추가 -->
	<insert id="addProductType" parameterType="com.springbook.etc.vo.ProductVO">
		INSERT INTO PRODUCT
		(
		product_nm, 
		product_cd, 
		type, 
		file_id, 
		file_nm,
		reg_date
		)
		VALUES
		(
		#{productNm}, 
		#{productCd}, 
		#{type}, 
		#{fileId},
		#{fileNm},
		now()		
		)
	</insert>
	
		<!--제품타입추가 -->
	<update id="updateProductType" parameterType="com.springbook.etc.vo.ProductVO">
		UPDATE
		PRODUCT
		SET product_nm = #{productNm},
			product_cd = #{productCd},
			type = #{type},
			file_id = #{fileId},
			file_nm = #{fileNm},
			reg_date = now()
    	WHERE PRODUCT_IDX = #{productIdx}
	</update>
	
	<!--제품타입삭제 -->
	<delete id="typeDelete" parameterType="java.lang.String">
	    DELETE FROM PRODUCT
	    WHERE
        PRODUCT_IDX = ${list}
	</delete>

	<!--두께등록관리 전체 개수 -->
	<select id="thicknessListCount" resultType="int" parameterType="Map">
		SELECT 
		COUNT(*)
		FROM
	    PRODUCT_THICKNESS
		WHERE 
		DEL_YN = 'N'
		<if test= "keyword != null and keyword.equals('') and type.equals('productNm')">
    	AND	PRODUCT_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
		<if test= "keyword != null and !keyword.equals('') and type.equals('thickness')">
    	AND	THICKNESS LIKE CONCAT("%",#{keyword},"%")
   		</if>   
	</select>
	
	<!--페이지&키워드 포함 두께 등록관리조회 -->
	<select id="getThicknessList" resultType="com.springbook.etc.vo.ProductThicknessVO" parameterType="Map">
		SELECT
		*
		FROM
		PRODUCT_THICKNESS
		WHERE 
		DEL_YN = 'N'
		<if test= "keyword != null and !keyword.equals('') and type.equals('productNm')">
    	AND	PRODUCT_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
		<if test= "keyword != null and !keyword.equals('') and type.equals('thickness')">
    	AND	THICKNESS LIKE CONCAT("%",#{keyword},"%")
   		</if> 
		LIMIT #{i}, #{contentnum}
	</select>
	
	<!--제품명등록관리 전체 개수 -->
	<select id="getProductNameList" resultType="com.springbook.etc.vo.ProductVO">
		SELECT 
		*
		FROM
	    PRODUCT
		WHERE 
		DEL_YN = 'N'
	</select>
	
	<!--제품두께추가 -->
	<insert id="addProductThickness" parameterType="com.springbook.etc.vo.ProductVO">
		INSERT INTO PRODUCT_THICKNESS
		(
		product_nm, 
		thickness, 
		test_institute,
		test_num, 
		file_id, 
		file_nm,
		custom_order,
		reg_date
		)
		VALUES
		(
		#{productNm}, 
		#{thickness},
		#{testInstitute}, 
		#{testNum}, 
		#{fileId},
		#{fileNm},
		#{customOrder},
		now()		
		)
	</insert>

	<!--제품두께업데이트 -->
	<update id="updateProductThickness" parameterType="com.springbook.etc.vo.ProductVO">
		UPDATE
		PRODUCT_THICKNESS
		SET product_nm = #{productNm},
			thickness = #{thickness},
			test_institute = #{testInstitute},
			test_num = #{testNum},
			file_id = #{fileId},
			file_nm = #{fileNm},
			custom_order = #{customOrder},
			reg_date = now()
    	WHERE PRODUCT_IDX = #{productIdx}		
	</update>
		
	<!--제품두께삭제 -->
	<delete id="thicknessDelete" parameterType="java.lang.String">
	    DELETE FROM PRODUCT_THICKNESS
	    WHERE
        PRODUCT_IDX = ${list}
	</delete>
	
	<!--사이즈등록관리 전체 개수 -->
	<select id="sizeListCount" resultType="int" parameterType="Map">
		SELECT 
		COUNT(*)
		FROM
		PRODUCT_SIZE SIZE LEFT OUTER JOIN PRODUCT_THICKNESS THICKNESS ON SIZE.PRODUCT_NM = THICKNESS.PRODUCT_NM
		INNER JOIN PRODUCT ON SIZE.PRODUCT_NM = PRODUCT.PRODUCT_NM
		WHERE 
		SIZE.DEL_YN = 'N'
		<if test= "keyword != null and keyword.equals('') and type.equals('productNm')">
    	AND	PRODUCT_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
		<if test= "keyword != null and !keyword.equals('') and type.equals('size')">
    	AND	SIZE LIKE CONCAT("%",#{keyword},"%")
   		</if>   
	</select>
	
	<!--페이지&키워드 포함 사이즈 등록관리조회 -->
	<select id="getSizeList" resultType="Map" parameterType="Map">
		SELECT
		SIZE.*, THICKNESS.THICKNESS AS THICKNESS
		FROM
		PRODUCT_SIZE SIZE LEFT OUTER JOIN PRODUCT_THICKNESS THICKNESS ON SIZE.PRODUCT_NM = THICKNESS.PRODUCT_NM
		INNER JOIN PRODUCT ON SIZE.PRODUCT_NM = PRODUCT.PRODUCT_NM
		WHERE 
		SIZE.DEL_YN = 'N'
		<if test= "keyword != null and !keyword.equals('') and type.equals('productNm')">
    	AND	SIZE.PRODUCT_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
		<if test= "keyword != null and !keyword.equals('') and type.equals('size')">
    	AND	SIZE.SIZE LIKE CONCAT("%",#{keyword},"%")
   		</if> 
		LIMIT #{i}, #{contentnum}
	</select>
			
	<!--제품사이즈추가 -->
	<insert id="addProductSize" parameterType="com.springbook.etc.vo.ProductSizeVO">
		INSERT INTO PRODUCT_SIZE
		(
		product_nm, 
		size, 
		height,
		width,
		custom_order,
		reg_date
		)
		VALUES
		(
		#{productNm}, 
		#{size},
		#{height}, 
		#{width},
		#{customOrder},
		now()		
		)
	</insert>
	
	<!--제품사이즈삭제 -->
	<delete id="sizeDelete" parameterType="java.lang.String">
	    DELETE FROM PRODUCT_SIZE
	    WHERE
        PRODUCT_IDX = ${list}
	</delete>
	
	<!--상세관리 전체 개수 -->
	<select id="detailListCount" resultType="int" parameterType="Map">
		SELECT
		COUNT(*)
		FROM
		PRODUCT_SIZE SIZE 
			LEFT OUTER JOIN PRODUCT_THICKNESS THICKNESS ON SIZE.PRODUCT_NM = THICKNESS.PRODUCT_NM
			LEFT OUTER JOIN PRODUCT PRODUCT ON PRODUCT.PRODUCT_NM = THICKNESS.PRODUCT_NM
			INNER JOIN PRODUCT_DETAIL DETAIL ON SIZE.PRODUCT_NM = DETAIL.PRODUCT_NM 
												AND DETAIL.THICKNESS = THICKNESS.THICKNESS 
												AND SIZE.SIZE = DETAIL.SIZE
		WHERE 
		SIZE.DEL_YN = 'N'
		<if test= "keyword != null and !keyword.equals('') and type.equals('productNm')">
    	AND	DETAIL.PRODUCT_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
		<if test= "keyword != null and !keyword.equals('') and type.equals('size')">
    	AND	DETAIL.SIZE LIKE CONCAT("%",#{keyword},"%")
   		</if> 
   		<if test= "keyword != null and !keyword.equals('') and type.equals('thickness')">
    	AND	DETIAL.THICKNESS LIKE CONCAT("%",#{keyword},"%")
   		</if>   
	</select>
	
	<!--페이지&키워드 포함 상세 등록관리조회 -->
	<select id="getDetailList" resultType="Map" parameterType="Map">
		SELECT
		DETAIL.*, product.PRODUCT_CD
		FROM
		PRODUCT_SIZE SIZE 
			LEFT OUTER JOIN PRODUCT_THICKNESS THICKNESS ON SIZE.PRODUCT_NM = THICKNESS.PRODUCT_NM
			LEFT OUTER JOIN PRODUCT PRODUCT ON PRODUCT.PRODUCT_NM = THICKNESS.PRODUCT_NM
			INNER JOIN PRODUCT_DETAIL DETAIL ON SIZE.PRODUCT_NM = DETAIL.PRODUCT_NM 
												AND DETAIL.THICKNESS = THICKNESS.THICKNESS 
												AND SIZE.SIZE = DETAIL.SIZE
		WHERE 
		SIZE.DEL_YN = 'N'
		<if test= "keyword != null and !keyword.equals('') and type.equals('productNm')">
    	AND	DETAIL.PRODUCT_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
		<if test= "keyword != null and !keyword.equals('') and type.equals('size')">
    	AND	DETAIL.SIZE LIKE CONCAT("%",#{keyword},"%")
   		</if> 
   		<if test= "keyword != null and !keyword.equals('') and type.equals('thickness')">
    	AND	DETIAL.THICKNESS LIKE CONCAT("%",#{keyword},"%")
   		</if> 
		LIMIT #{i}, #{contentnum}
	</select>		
	
	<!--제품명에 따른 제품두께 조회 -->
	<select id="selectDetailThickness" resultType="Map" parameterType="java.lang.String">
		SELECT
		*
		FROM
		PRODUCT A LEFT OUTER JOIN PRODUCT_THICKNESS THICKNESS ON A.PRODUCT_NM = THICKNESS.PRODUCT_NM
		WHERE 
		A.DEL_YN = 'N' AND A.PRODUCT_NM = #{name}
		GROUP BY THICKNESS.THICKNESS
	</select>
	
	<!--제품명에 따른 제품사이즈 조회 -->
	<select id="selectDetailSize" resultType="Map" parameterType="java.lang.String">
		SELECT
		*
		FROM
		PRODUCT A LEFT OUTER JOIN PRODUCT_SIZE SIZE ON A.PRODUCT_NM = SIZE.PRODUCT_NM
		WHERE 
		A.DEL_YN = 'N' AND A.PRODUCT_NM = #{name}
		GROUP BY SIZE.SIZE
	</select>
	
	<!--제품 상세설정추가 -->
	<insert id="addProductDetail" parameterType="com.springbook.etc.vo.ProductDetailVO">
		INSERT INTO PRODUCT_DETAIL
		(
		product_nm,
		thickness,
		size, 
		height,
		width,
		safety,
		pallet,
		slice,
		reg_date
		)
		VALUES
		(
		#{productNm}, 
		#{thickness},
		#{size},
		#{height}, 
		#{width},
		#{safety},
		#{pallet},
		#{slice},
		now()		
		)
	</insert>

	<!--제품 상세설정 수정 -->
	<update id="updateProductDetail" parameterType="com.springbook.etc.vo.ProductDetailVO">
		UPDATE
		PRODUCT_DETAIL
		SET product_nm = #{productNm},
			thickness = #{thickness},
			size = #{size},
			height = #{height},
			width = #{width},
			height = #{height},
			safety = #{safety},
			pallet = #{pallet},
			slice = #{slice},
			reg_date = now()
    	WHERE PRODUCT_IDX = #{productIdx}			
	</update>
	
	<!--상세설정 삭제 -->
	<delete id="detailDelete" parameterType="java.lang.String">
	    DELETE FROM PRODUCT_DETAIL
	    WHERE
        PRODUCT_IDX = ${list}
	</delete>

	<!--신규가입 새로운 문의 체크 -->
	<update id="checkNew" parameterType="java.lang.String">
		UPDATE
		JOIN_ASK
		SET CHECK_NEW = "1"
    	WHERE IDX = #{idx}
	</update>
			
	<!--창고 전체 개수 -->
	<select id="warehouseListCount" resultType="int">
		SELECT 
		COUNT(*)
		FROM
	    WAREHOUSE
		WHERE 
		DEL_YN = 'N'
	</select>
	
	<!--페이지 포함 창고조회 -->
	<select id="getWarehouseList" resultType="com.springbook.etc.vo.WarehouseVO" parameterType="Map">
		SELECT
		*
		FROM
		WAREHOUSE
		WHERE DEL_YN = "N"
		LIMIT #{i}, #{contentnum}
	</select>
	
	<!--창고 재고 반영 넣기 -->
	<insert id="insertInventoryStock">
	    INSERT INTO WAREHOUSE_STOCK
		(
		warehouse,
		product_cd,
		product_nm,
		thickness,
		size, 
		stock,
		reason,
		reg_date
		)
		VALUES
		(
		#{warehouse}, 
		#{productCd}, 
		#{productNm}, 
		#{thickness},
		#{size},
		#{stock}, 
		#{reason},
		now()		
		)
	</insert>
	
	<!--창고 재고 반영 넣기 -->
	<update id="updateInventoryStock">
		UPDATE
		WAREHOUSE_STOCK
		SET STOCK = #{stock} , REASON = #{reason}, REG_DATE = now()
    	WHERE
		THICKNESS = #{thickness} AND
		SIZE = #{size} AND
		PRODUCT_CD = #{productCd} AND
		WAREHOUSE = #{warehouse} AND
		PRODUCT_NM = #{productNm}
	</update>
	
	<!--페이지 포함 창고조회 -->
	<select id="inventoryStockInfo" parameterType="Map" resultType="com.springbook.etc.vo.WarehouseStockVO">
		SELECT
		*
		FROM
		WAREHOUSE_STOCK
		WHERE
		THICKNESS = #{thickness} AND
		SIZE = #{size} AND
		PRODUCT_CD = #{productCd} AND
		WAREHOUSE = #{warehouse}
	</select>
	
	<!--창고 재고변경목록 넣기 -->
	<insert id="insertInventoryInfo">
	    INSERT INTO WAREHOUSE_inventory
		(
		warehouse,
		product_cd,
		product_nm,
		thickness,
		size, 
		stock,
		reason,
		reg_date
		)
		VALUES
		(
		#{warehouse}, 
		#{productCd}, 
		#{productNm}, 		
		#{thickness},
		#{size},
		#{stock}, 
		#{reason},
		now()		
		)
	</insert>
	
	<!--단일 제품명-->
	<select id="getProductInfo" parameterType="java.lang.String" resultType="com.springbook.etc.vo.ProductVO">
		SELECT
		*
		FROM
		PRODUCT
		WHERE
		PRODUCT_IDX = #{idx}
	</select>
	
	<!--단일 두께정보조회-->
	<select id="getThicknessInfo" parameterType="java.lang.String" resultType="com.springbook.etc.vo.ProductThicknessVO">
		SELECT
		*
		FROM
		PRODUCT_THICKNESS
		WHERE
		PRODUCT_IDX = #{idx}
	</select>
	
	<!--단일 상세설정조회-->
	<select id="getDetailInfo" parameterType="java.lang.String" resultType="com.springbook.etc.vo.ProductDetailVO">
		SELECT
		*
		FROM
		PRODUCT_DETAIL
		WHERE
		PRODUCT_IDX = #{idx}
	</select>
	
	<!--제품별상세설정 검색 개수 -->
	<select id="safetyListCount" resultType="int" parameterType="java.lang.String">
		SELECT 
		COUNT(*)
		FROM
		PRODUCT_DETAIL
		WHERE 
		DEL_YN = "N"
		<if test= "keyword != null and !keyword.equals('')">
    	AND	PRODUCT_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
	</select>
	
	<!--제품별상세 포함 검색 페이징포함 -->
	<select id="getSafetyList" resultType="Map" parameterType="Map">
		SELECT
		*
		FROM
		PRODUCT_DETAIL DETAIL
		INNER JOIN PRODUCT A ON A.PRODUCT_NM = DETAIL.PRODUCT_NM 
		WHERE 
		A.DEL_YN = 'N'
		<if test= "keyword != null and !keyword.equals('')">
    	AND	PRODUCT_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
		LIMIT #{i}, #{contentnum}
	</select>
	
	<!--여신관리 개수조회-->
	<select id="creditListCount" resultType="int" parameterType="java.lang.String">
		SELECT 
		COUNT(*)
		FROM
		DEPOSIT_HISTORY
		<if test= "keyword != null and !keyword.equals('')">
    	WHERE COMPANY_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
	</select>
	
	<!--여신관리 페이징포함 조회 -->
	<select id="getCreditList" resultType="Map" parameterType="Map">
		SELECT
		*
		FROM
		DEPOSIT_HISTORY HISTORY
		INNER JOIN MEMBER MEMBER ON MEMBER.COMPANY_NM = HISTORY.COMPANY_NM
		<if test= "keyword != null and !keyword.equals('')">
    	WHERE HISTORY.COMPANY_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
   		GROUP BY HISTORY.IDX
		LIMIT #{i}, #{contentnum}
	</select>
	
	<!--입금등록 거래처 검색 -->
	<select id="memberList" resultType="com.springbook.member.vo.MemberVO">
		SELECT
		*
		FROM
		MEMBER
		WHERE 
		DEL_YN = 'N' AND ROLE = '1'
	</select>
	
	<!--창고별재고 전체 개수 -->
	<select id="inventoryHistoryCount" resultType="int">
		SELECT
		COUNT(*)
		FROM
		WAREHOUSE_INVENTORY
	</select>
	
	<!--창고별재고 전체 목록 -->
	<select id="getInventoryHistory" resultType="com.springbook.etc.vo.WarehouseInventoryVO">
		SELECT
		*
		FROM
		WAREHOUSE_INVENTORY
		ORDER BY REG_DATE DESC
		LIMIT #{i}, #{contentnum}
	</select>
	
	<!--거래처검색 개수-->
	<select id="selectCompanyCount" resultType="int" parameterType="java.lang.String">
		SELECT 
		COUNT(*)
		FROM
		MEMBER
		WHERE ROLE = '1' 
		<if test= "keyword != null and !keyword.equals('')">
    	AND COMPANY_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
	</select>
	
	<!--거래처 검색 결과-->
	<select id="getSelectCompany" resultType="com.springbook.member.vo.MemberVO" parameterType="Map">
		SELECT
		*
		FROM
		MEMBER
		WHERE ROLE = '1' 
		<if test= "keyword != null and !keyword.equals('')">
    	AND COMPANY_NM LIKE CONCAT("%",#{keyword},"%")
   		</if>
   		LIMIT #{i}, #{contentnum}
	</select>

	<!--회사 재정정보 검색 결과-->
	<select id="searchCreditInfo" resultType="Map" parameterType="java.lang.String">
		SELECT
		*
		FROM
		CLIENT_MONEY_INFO MONEY
		INNER JOIN MEMBER MEMBER ON MEMBER.COMPANY_NM = MONEY.COMPANY_NM
		WHERE MONEY.COMPANY_NM = #{keyword}
		GROUP BY MONEY.IDX
	</select>
	
	<!--여신목록등록 -->
	<insert id="addDepositHistory">
	    INSERT INTO DEPOSIT_HISTORY
		(
		company_nm,
		total_dep,
		total_order,
		dep_date, 
		credit_amount,
		dep_amount,
		reg_date
		)
		VALUES
		(
		#{companyNm}, 
		#{totalDeposit}, 
		#{totalOrder}, 		
		#{depDate},
		#{credit},
		#{depAmount},
		now()		
		)
	</insert>
	
	<!--입금액 업로드 -->
	<update id="updateTotalDeposit">
		UPDATE
		CLIENT_MONEY_INFO
		SET TOTAL_DEPOSIT = #{updateDepositInfo}
    	WHERE
		COMPANY_NM = #{companyNm}
	</update>
	
	<!--여신관리삭제 -->
	<delete id="historyDelete" parameterType="java.lang.String">
	    DELETE FROM DEPOSIT_HISTORY
	    WHERE
        IDX = ${list}
	</delete>

</mapper>